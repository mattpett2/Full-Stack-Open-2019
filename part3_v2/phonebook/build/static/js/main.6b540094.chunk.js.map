{"version":3,"sources":["services/phonebook.js","components/filter.js","components/personform.js","components/persons.js","components/notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newEntry","post","id","put","delete","Filter","handleFilterChange","onChange","PersonForm","addNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","personRows","className","message","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","phoneService","initialNums","event","console","log","target","value","preventDefault","name","number","filter","person","length","returnedEntry","concat","setTimeout","window","confirm","find","pers","map","catch","error","substring","toLowerCase","key","onClick","n","e","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b540094.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const create = newEntry => {\r\n    const request = axios.post(baseUrl, newEntry)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newEntry) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newEntry)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const remove = id => {\r\n      const request = axios.delete(`${baseUrl}/${id}`)\r\n      return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react'\r\n\r\n\r\nconst Filter = ({ handleFilterChange }) => {\r\n    return(\r\n    <form>\r\n        <div>filter shown with <input onChange={handleFilterChange}/></div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = ({ addNumber, handleNameChange, handleNumberChange}) => {\r\n    return(\r\n    <form onSubmit={addNumber}>\r\n    <div>name: <input onChange={handleNameChange}/></div>\r\n    <div>number: <input onChange={handleNumberChange}/></div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = ({ personRows }) => {\r\n    return(\r\n    <ul className='numlist'>\r\n    {personRows()}\r\n    </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Success = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"success\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default { Success, Error }","import React, { useState, useEffect } from 'react'\r\nimport phoneService from './services/phonebook'\r\nimport './styles.css'\r\nimport Filter from './components/filter'\r\nimport PersonForm from './components/personform'\r\nimport Persons from './components/persons'\r\nimport Notification from './components/notification'\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ newFilter, setNewFilter] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState(null)  \r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const hook = () => {\r\n    phoneService.getAll()\r\n    .then(initialNums => {\r\n      setPersons(initialNums)\r\n    })\r\n  }\r\n  \r\n  useEffect(hook, [])  \r\n\r\n  const deletePerson = (id, name) => {\r\n    console.log(`delete person ${id}`)\r\n      if (window.confirm(`Delete ${name}?`)){\r\n        phoneService\r\n        .remove(id)\r\n        .then(setPersons(persons.filter(n => n.id !== id)))\r\n        .catch(e => {\r\n          alert('The number was already deleted')\r\n        })\r\n      }\r\n    }\r\n\r\n  const addNumber = (event) => {\r\n      event.preventDefault()\r\n      const newEntry = {\r\n          name: newName,\r\n          number: newNumber\r\n      }\r\n      if (persons.filter(person => person.name === newName).length !== 0){\r\n          if(window.confirm(`${newName} is already in phonebook. Would you like \r\n          to replace the existing number?`)){\r\n            let obj = persons.find(pers => pers.name === newName)\r\n            let id = obj.id;\r\n            phoneService\r\n            .update(id, newEntry)\r\n            .then(returnedEntry => {\r\n              setPersons(persons.map(pers => pers.name !== newName ? pers : newEntry))\r\n              setNewName('')\r\n              setNewNumber('')\r\n            })\r\n            .catch(error => {\r\n              setErrorMessage(`Information of ${newName} has already been deleted`)\r\n            })\r\n            setTimeout(() => {\r\n              setErrorMessage(null)\r\n            }, 5000)\r\n          }\r\n          return\r\n      }\r\n\r\n      phoneService\r\n      .create(newEntry)\r\n      .then(returnedEntry => {\r\n        setPersons(persons.concat(returnedEntry))\r\n        setSuccessMessage(\r\n          `Added ${newEntry.name}`\r\n        )\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewFilter(event.target.value)\r\n  }\r\n \r\n  const personRows = () => {\r\n    let filteredPersons = persons.filter(\r\n        person => person.name.substring(0, newFilter.length).toLowerCase() ===\r\n        newFilter.toLowerCase())\r\n        return(\r\n            filteredPersons.map(person =><li key={person.name}>{person.name} {person.number}\r\n            <button onClick={() => deletePerson(person.id, person.name)}>Delete</button></li>)    \r\n        )        \r\n  }\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification.Success message={successMessage} />\r\n        <Notification.Error message={errorMessage} />\r\n        <Filter handleFilterChange={handleFilterChange}/>\r\n      <h3>add a new</h3>\r\n        <PersonForm handleNameChange={handleNameChange}\r\n         handleNumberChange={handleNumberChange}\r\n         addNumber={addNumber}/>\r\n      <h2>Numbers</h2>\r\n        <Persons personRows={personRows}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}